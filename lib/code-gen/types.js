"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpStatusCodes = void 0;
__exportStar(require("../schema/limit"), exports);
var HttpStatusCodes;
(function (HttpStatusCodes) {
    HttpStatusCodes[HttpStatusCodes["Continue"] = 100] = "Continue";
    HttpStatusCodes[HttpStatusCodes["SwitchingProtocols"] = 101] = "SwitchingProtocols";
    HttpStatusCodes[HttpStatusCodes["Processing"] = 102] = "Processing";
    HttpStatusCodes[HttpStatusCodes["OK"] = 200] = "OK";
    HttpStatusCodes[HttpStatusCodes["Created"] = 201] = "Created";
    HttpStatusCodes[HttpStatusCodes["Accepted"] = 202] = "Accepted";
    HttpStatusCodes[HttpStatusCodes["NonAuthoritative"] = 203] = "NonAuthoritative";
    HttpStatusCodes[HttpStatusCodes["NoContent"] = 204] = "NoContent";
    HttpStatusCodes[HttpStatusCodes["ResetContent"] = 205] = "ResetContent";
    HttpStatusCodes[HttpStatusCodes["PartialContent"] = 206] = "PartialContent";
    HttpStatusCodes[HttpStatusCodes["MultiStatus"] = 207] = "MultiStatus";
    HttpStatusCodes[HttpStatusCodes["AlreadyReported"] = 208] = "AlreadyReported";
    HttpStatusCodes[HttpStatusCodes["IMUsed"] = 226] = "IMUsed";
    HttpStatusCodes[HttpStatusCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpStatusCodes[HttpStatusCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpStatusCodes[HttpStatusCodes["Found"] = 302] = "Found";
    HttpStatusCodes[HttpStatusCodes["SeeOther"] = 303] = "SeeOther";
    HttpStatusCodes[HttpStatusCodes["NotModified"] = 304] = "NotModified";
    HttpStatusCodes[HttpStatusCodes["UseProxy"] = 305] = "UseProxy";
    HttpStatusCodes[HttpStatusCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpStatusCodes[HttpStatusCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpStatusCodes[HttpStatusCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpStatusCodes[HttpStatusCodes["BadRequest"] = 400] = "BadRequest";
    HttpStatusCodes[HttpStatusCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpStatusCodes[HttpStatusCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpStatusCodes[HttpStatusCodes["Forbidden"] = 403] = "Forbidden";
    HttpStatusCodes[HttpStatusCodes["NotFound"] = 404] = "NotFound";
    HttpStatusCodes[HttpStatusCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpStatusCodes[HttpStatusCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpStatusCodes[HttpStatusCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpStatusCodes[HttpStatusCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpStatusCodes[HttpStatusCodes["Conflict"] = 409] = "Conflict";
    HttpStatusCodes[HttpStatusCodes["Gone"] = 410] = "Gone";
    HttpStatusCodes[HttpStatusCodes["LengthRequired"] = 411] = "LengthRequired";
    HttpStatusCodes[HttpStatusCodes["PreconditionFailed"] = 412] = "PreconditionFailed";
    HttpStatusCodes[HttpStatusCodes["RequestEntityTooLarge"] = 413] = "RequestEntityTooLarge";
    HttpStatusCodes[HttpStatusCodes["PayloadTooLarge"] = 413] = "PayloadTooLarge";
    HttpStatusCodes[HttpStatusCodes["RequestUriTooLong"] = 414] = "RequestUriTooLong";
    HttpStatusCodes[HttpStatusCodes["UriTooLong"] = 414] = "UriTooLong";
    HttpStatusCodes[HttpStatusCodes["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";
    HttpStatusCodes[HttpStatusCodes["RequestedRangeNotSatisfiable"] = 416] = "RequestedRangeNotSatisfiable";
    HttpStatusCodes[HttpStatusCodes["RangeNotSatisfiable"] = 416] = "RangeNotSatisfiable";
    HttpStatusCodes[HttpStatusCodes["ExpectationFailed"] = 417] = "ExpectationFailed";
    HttpStatusCodes[HttpStatusCodes["ImATeapot"] = 418] = "ImATeapot";
    HttpStatusCodes[HttpStatusCodes["AuthenticationTimeout"] = 419] = "AuthenticationTimeout";
    HttpStatusCodes[HttpStatusCodes["MisdirectedRequest"] = 421] = "MisdirectedRequest";
    HttpStatusCodes[HttpStatusCodes["UnprocessableEntity"] = 422] = "UnprocessableEntity";
    HttpStatusCodes[HttpStatusCodes["Locked"] = 423] = "Locked";
    HttpStatusCodes[HttpStatusCodes["FailedDependency"] = 424] = "FailedDependency";
    HttpStatusCodes[HttpStatusCodes["UpgradeRequired"] = 426] = "UpgradeRequired";
    HttpStatusCodes[HttpStatusCodes["PreconditionRequired"] = 428] = "PreconditionRequired";
    HttpStatusCodes[HttpStatusCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpStatusCodes[HttpStatusCodes["RequestHeaderFieldsTooLarge"] = 431] = "RequestHeaderFieldsTooLarge";
    HttpStatusCodes[HttpStatusCodes["UnavailableForLegalReasons"] = 451] = "UnavailableForLegalReasons";
    HttpStatusCodes[HttpStatusCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpStatusCodes[HttpStatusCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpStatusCodes[HttpStatusCodes["BadGateway"] = 502] = "BadGateway";
    HttpStatusCodes[HttpStatusCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpStatusCodes[HttpStatusCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
    HttpStatusCodes[HttpStatusCodes["HttpVersionNotsupported"] = 505] = "HttpVersionNotsupported";
    HttpStatusCodes[HttpStatusCodes["VariantAlsoNegotiates"] = 506] = "VariantAlsoNegotiates";
    HttpStatusCodes[HttpStatusCodes["InsufficientStorage"] = 507] = "InsufficientStorage";
    HttpStatusCodes[HttpStatusCodes["LoopDetected"] = 508] = "LoopDetected";
    HttpStatusCodes[HttpStatusCodes["NotExtended"] = 510] = "NotExtended";
    HttpStatusCodes[HttpStatusCodes["NetworkAuthenticationRequired"] = 511] = "NetworkAuthenticationRequired";
})(HttpStatusCodes = exports.HttpStatusCodes || (exports.HttpStatusCodes = {}));
